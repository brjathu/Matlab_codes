clear all;
instruction = {'ADDI' 'R2','1';
'SHFLI' 'R2','10';
'LOAD' 'R3','R2';
'ADDH' 'R3','15';
'ADDL' 'R3','15';
'STORE' 'R2','R3';
'HALT' 'x','x'};

integer= {'0' '1' '2' '3' '4' '5' '6' '7' '8' '9' '10' '11' '12' '13' '14' '15'};

opcodes = {'LOAD','STORE','ADDI','ADD','CLRREG','LOD128','INC128','CPYREG','SHFLI','SHFRI','HALT','ADDL','ADDH','R1','R2','R3','R4','R5','R6','R7','R8','R9','R10','x'};
decode = {[1 1 1 0 0 0 0 0],[1 1 1 0 1 0 0 0],[1 1 0 0 1 0 0 0],[0 1 0 1 0 0 0 0],[1 1 0 1 0 0 0 0],[1 1 0 1 1 0 0 0],[0 0 0 1 1 0 0 0],[0 0 1 0 1 0 0 0],[1 0 1 0 0 0 0 0],[1 0 1 0 1 0 0 0],[1 1 1 1 1 1 1 1],[1 0 0 0 1 0 0 0],[1 0 0 1 0 0 0 0],[0 0 0 1],[0 0 1 0],[0 0 1 1],[0 1 0 0],[0 1 0 1],[0 1 1 0],[0 1 1 1],[1 0 0 0],[1 0 0 1],[1 0 1 0],[0 0 0 0]};

dictionary = containers.Map(opcodes,decode);
binaryVectorToDecimal(dictionary(char(instruction(1,1))));
l=length(instruction);
temp = zeros(2,l);
 %binaryVectorToDecimal(dictionary(char(instruction(3,3))))+binaryVectorToDecimal(dictionary(char(instruction(3,2))))*16;
for i=1:l
    temp(1,i)=binaryVectorToDecimal(dictionary(char(instruction(i,1))));
    if (ismember(instruction(i,3),integer))
        temp(2,i)=binaryVectorToDecimal(dictionary(char(instruction(i,2))))*16 + str2double(char(instruction(i,3)));
    else
        temp(2,i)=binaryVectorToDecimal(dictionary(char(instruction(i,2))))*16+ binaryVectorToDecimal(dictionary(char(instruction(i,3))));
    end
end

k=length(temp);
send = zeros(2*1023,1);
for m=1:2*k
    send(m)=temp(m);
end
    
imIn=uint8((imread('cameraman.tif')));
im=imresize(imIn,0.2);

s = serial('COM10');
set(s,'BaudRate',115200);
s.InputbufferSize=256*256;
s.Timeout=10;
fopen(s);
pause(0.1)

for k=1:length(send)
    fwrite(s,send(k),'uint8')
end

[m,n] =size(im);
count = 0;
for i=1:m
    for j=1:n
        fwrite(s,im(i,j), 'uint8')
%         count = count +1
%         pause(0.05)
    end
end

out = fread(s)
fclose(s)
delete(s)
clear s



out2=uint8(out)

imNew=uint8(zeros(m,n));

for i=1:floor(length(out2)/m)
    for j=1:n
        imNew(i,j) = out2(length(out2)-j-m*(i-1)+1);
    end
end

imshow(imNew)